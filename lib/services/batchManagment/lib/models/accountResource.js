/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the AccountResource class.
 * @constructor
 * Basic resource information.
 * @member {string} [id] Gets or sets the ID of the resource.
 * 
 * @member {string} [type] Gets or sets the type of the resource.
 * 
 * @member {string} [name] The name of the account.
 * 
 * @member {string} [location] The region in which the account is created.
 * 
 * @member {object} [tags] The user specified tags associated with the account.
 * 
 * @member {object} [properties] The properties associated with the account.
 * 
 * @member {string} [properties.accountEndpoint] The endpoint used by this
 * account to obtain Batch services.
 * 
 * @member {string} [properties.provisioningState] The provisioned state of
 * the resource. Possible values include: 'Invalid', 'Creating', 'Deleting',
 * 'Succeeded', 'Failed', 'Cancelled'
 * 
 * @member {object} [properties.autoStorage] The properties and status of any
 * auto storage associated with the account.
 * 
 * @member {string} [properties.autoStorage.storageAccountId] Gets or sets the
 * resource id of the storage account to be used for auto storage.
 * 
 * @member {date} [properties.autoStorage.lastKeySync] Gets or sets the UTC
 * time at which storage keys were last synced to the Batch account.
 * 
 * @member {number} [properties.coreQuota] The core quota for this Batch
 * account.
 * 
 * @member {number} [properties.poolQuota] The pool quota for this Batch
 * account.
 * 
 * @member {number} [properties.activeJobAndJobScheduleQuota] The active job
 * and job schedule quota for this Batch account.
 * 
 */
function AccountResource() {
}

/**
 * Defines the metadata of AccountResource
 *
 * @returns {object} metadata of AccountResource
 *
 */
AccountResource.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'AccountResource',
    type: {
      name: 'Composite',
      className: 'AccountResource',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        location: {
          required: false,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        properties: {
          required: false,
          serializedName: 'properties',
          type: {
            name: 'Composite',
            className: 'AccountProperties'
          }
        }
      }
    }
  };
};

module.exports = AccountResource;
