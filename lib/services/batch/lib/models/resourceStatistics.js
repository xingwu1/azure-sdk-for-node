/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ResourceStatistics class.
 * @constructor
 * Statistics related to resource consumption by compute nodes in a pool.
 * @member {date} [startTime] Gets or sets the start time of the time range
 * covered by the statistics.
 * 
 * @member {date} [lastUpdateTime] Gets or sets the time at which the
 * statistics were last updated. All statistics are limited to the range
 * between startTime and lastUpdateTime.
 * 
 * @member {number} [avgCPUPercentage] Gets or sets the average CPU usage
 * across all nodes in the pool (percentage per node).
 * 
 * @member {number} [avgMemoryGiB] Gets or sets the average memory usage in
 * GiB across all nodes in the pool.
 * 
 * @member {number} [peakMemoryGiB] Gets or sets the peak memory usage in GiB
 * across all nodes in the pool.
 * 
 * @member {number} [avgDiskGiB] Gets or sets the average used disk space in
 * GiB across all nodes in the pool.
 * 
 * @member {number} [peakDiskGiB] Gets or sets the peak used disk space in GiB
 * across all nodes in the pool.
 * 
 * @member {number} [diskReadIOps] Gets or sets the total number of disk read
 * operations across all nodes in the pool.
 * 
 * @member {number} [diskWriteIOps] Gets or sets the total number of disk
 * write operations across all nodes in the pool.
 * 
 * @member {number} [diskReadGiB] Gets or sets the total amount of data in GiB
 * of disk reads across all nodes in the pool.
 * 
 * @member {number} [diskWriteGiB] Gets or sets the total amount of data in
 * GiB of disk writes across all nodes in the pool.
 * 
 * @member {number} [networkReadGiB] Gets or sets the total amount of data in
 * GiB of network reads across all nodes in the pool.
 * 
 * @member {number} [networkWriteGiB] Gets or sets the total amount of data in
 * GiB of network writes across all nodes in the pool.
 * 
 */
function ResourceStatistics() {
}

/**
 * Defines the metadata of ResourceStatistics
 *
 * @returns {object} metadata of ResourceStatistics
 *
 */
ResourceStatistics.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ResourceStatistics',
    type: {
      name: 'Composite',
      className: 'ResourceStatistics',
      modelProperties: {
        startTime: {
          required: false,
          serializedName: 'startTime',
          type: {
            name: 'DateTime'
          }
        },
        lastUpdateTime: {
          required: false,
          serializedName: 'lastUpdateTime',
          type: {
            name: 'DateTime'
          }
        },
        avgCPUPercentage: {
          required: false,
          serializedName: 'avgCPUPercentage',
          type: {
            name: 'Number'
          }
        },
        avgMemoryGiB: {
          required: false,
          serializedName: 'avgMemoryGiB',
          type: {
            name: 'Number'
          }
        },
        peakMemoryGiB: {
          required: false,
          serializedName: 'peakMemoryGiB',
          type: {
            name: 'Number'
          }
        },
        avgDiskGiB: {
          required: false,
          serializedName: 'avgDiskGiB',
          type: {
            name: 'Number'
          }
        },
        peakDiskGiB: {
          required: false,
          serializedName: 'peakDiskGiB',
          type: {
            name: 'Number'
          }
        },
        diskReadIOps: {
          required: false,
          serializedName: 'diskReadIOps',
          type: {
            name: 'Number'
          }
        },
        diskWriteIOps: {
          required: false,
          serializedName: 'diskWriteIOps',
          type: {
            name: 'Number'
          }
        },
        diskReadGiB: {
          required: false,
          serializedName: 'diskReadGiB',
          type: {
            name: 'Number'
          }
        },
        diskWriteGiB: {
          required: false,
          serializedName: 'diskWriteGiB',
          type: {
            name: 'Number'
          }
        },
        networkReadGiB: {
          required: false,
          serializedName: 'networkReadGiB',
          type: {
            name: 'Number'
          }
        },
        networkWriteGiB: {
          required: false,
          serializedName: 'networkWriteGiB',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = ResourceStatistics;
